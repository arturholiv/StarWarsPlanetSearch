{"version":3,"sources":["context/myContext.js","context/Provider.js","components/TableHeaders.jsx","services/planetsAPI.js","components/Table.jsx","components/TableRows.jsx","components/NumericFilter.jsx","components/MainContetn.jsx","App.js","index.js"],"names":["myContext","createContext","Provider","children","useState","planets","setPlanets","nameFilter","setNameFilter","filterByNumericValues","setFilterByNumericValues","state","filterByName","name","options","setOptions","value","TableHeaders","fetchPlanets","a","fetch","response","json","data","Table","useContext","operator","b","useEffect","results","fetchData","cellspacing","planetsToFilter","forEach","filter","planet","planetValue","Number","column","filterValue","comparison","toLowerCase","includes","map","key","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","TableRows","planetsToRender","NumericFilter","setColumn","setComparison","setValue","className","htmlFor","data-testid","id","onChange","target","option","optionGenerator","type","onClick","actualFilter","newFiltersArray","newOptionsOfColumnToFilter","indexToSetColumn","indexOf","removeFilter","MainContent","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ceafa52.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst myContext = createContext();\n\nexport default myContext;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport myContext from './myContext';\n\nexport default function Provider({ children }) {\n  const INITIAL_OPTIONS = ['population', 'orbital_period',\n    'diameter', 'rotation_period', 'surface_water'];\n\n  const [planets, setPlanets] = useState([]);\n  const [nameFilter, setNameFilter] = useState('');\n  const [filterByNumericValues, setFilterByNumericValues] = useState([]);\n  const [options, setOptions] = useState(INITIAL_OPTIONS);\n\n  const state = {\n    planets,\n    setPlanets,\n    filterByName: {\n      name: nameFilter,\n    },\n    setNameFilter,\n    filterByNumericValues,\n    setFilterByNumericValues,\n    options,\n    setOptions,\n  };\n\n  return (\n    <myContext.Provider value={ state }>\n      {children}\n    </myContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\n\nexport default function TableHeaders() {\n  return (\n    <tr>\n      <th>Name</th>\n      <th>Rotation Period</th>\n      <th>Orbital Period</th>\n      <th>Diameter</th>\n      <th>Climate</th>\n      <th>Gravity</th>\n      <th>Terrain</th>\n      <th>Surface Water</th>\n      <th>Population</th>\n      {/* <th>Films</th>\n      <th>Created</th>\n      <th>Edited</th>\n      <th>URL</th> */}\n    </tr>\n  );\n}\n","export async function fetchPlanets() {\n  const PLANETS_URL = 'https://swapi-trybe.herokuapp.com/api/planets/';\n  const response = await fetch(PLANETS_URL);\n  const data = await response.json();\n  return data;\n}\n\nexport function fetchany() { }\n","import React, { useContext, useEffect } from 'react';\nimport myContext from '../context/myContext';\nimport TableHeaders from './TableHeaders';\nimport TableRows from './TableRows';\nimport { fetchPlanets } from '../services/planetsAPI';\n\nexport default function Table() {\n  const {\n    planets,\n    setPlanets,\n    filterByName: { name },\n    filterByNumericValues,\n  } = useContext(myContext);\n\n  const operator = {\n    'maior que': (a, b) => a > b,\n    'menor que': (a, b) => a < b,\n    'igual a': (a, b) => a === b,\n  };\n\n  function applyFilters(planetsToFilter) {\n    filterByNumericValues.forEach((filter) => {\n      planetsToFilter = planetsToFilter.filter((planet) => {\n        const planetValue = Number(planet[filter.column]);\n        const filterValue = Number(filter.value);\n        return operator[filter.comparison](planetValue, filterValue);\n      });\n    });\n    return planetsToFilter;\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      const data = await fetchPlanets();\n      setPlanets(data.results);\n    }\n    fetchData();\n  }, [setPlanets]);\n  function planetsToRender() {\n    const filteredByNumbers = applyFilters(planets);\n    return filteredByNumbers\n      .filter((planet) => (planet.name).toLowerCase().includes((name).toLowerCase()))\n      .map((planet) => TableRows(planet)); // aqui eu chamo a fun√ßao do componente tablerows para criar cada linha\n  }\n\n  return (\n    <table cellspacing=\"5\">\n      <thead>\n        <TableHeaders />\n      </thead>\n\n      <tbody>\n        {planetsToRender()}\n      </tbody>\n    </table>\n  );\n}\n","import React from 'react';\n\nexport default function TableRows(planet) {\n  return (\n    <tr key={ planet.name }>\n      <td>{planet.name}</td>\n      <td>{planet.rotation_period}</td>\n      <td>{planet.orbital_period}</td>\n      <td>{planet.diameter}</td>\n      <td>{planet.climate}</td>\n      <td>{planet.gravity}</td>\n      <td>{planet.terrain}</td>\n      <td>{planet.surface_water}</td>\n      <td>{planet.population}</td>\n      {/* <td>{planet.films}</td>\n      <td>{planet.created}</td>\n      <td>{planet.edited}</td>\n      <td>{planet.url}</td> */}\n    </tr>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport myContext from '../context/myContext';\n\nexport default function NumericFilter() {\n  const {\n    filterByNumericValues,\n    setFilterByNumericValues,\n    options,\n    setOptions,\n  } = useContext(myContext);\n\n  const [column, setColumn] = useState('population');\n  const [comparison, setComparison] = useState('maior que');\n  const [value, setValue] = useState(0);\n\n  function removeFilter() {\n    const newOptionsOfColumnToFilter = options\n      .filter((option) => option !== column);\n    const indexToSetColumn = options.indexOf(column) === 0 ? 1 : 0;\n    setOptions(newOptionsOfColumnToFilter);\n    setColumn(options[indexToSetColumn]);\n  }\n\n  function addFilter() {\n    const actualFilter = {\n      column,\n      comparison,\n      value,\n    };\n\n    const newFiltersArray = [...filterByNumericValues, actualFilter];\n\n    setFilterByNumericValues(newFiltersArray);\n    removeFilter();\n  }\n\n  function optionGenerator(option) {\n    return (\n      <option\n        value={ option }\n        key={ option }\n        className=\"option-dropdown\"\n      >\n        {option}\n      </option>\n    );\n  }\n\n  return (\n    <div className=\"filters-container\">\n      <label htmlFor=\"columnInput\">\n        Filter by column:\n        <select\n          data-testid=\"column-filter\"\n          id=\"columnInput\"\n          onChange={ ({ target }) => setColumn(target.value) }\n          className=\"select\"\n        >\n          {options.map((option) => optionGenerator(option))}\n        </select>\n        </label>\n        <label htmlFor=\"comparisonInput\">\n\n          Bigger or smaller?\n          <select\n            data-testid=\"comparison-filter\"\n            id=\"comparisonInput\"\n            onChange={ ({ target }) => setComparison(target.value) }\n            className=\"select\"\n          >\n            <option\n              value=\"maior que\"\n              className=\"option-dropdown\"\n            >\n              bigger than\n            </option>\n            <option\n              value=\"menor que\"\n              className=\"option-dropdown\"\n            >\n              smaller than\n            </option>\n            <option\n              value=\"igual a\"\n              className=\"option-dropdown\"\n            >\n              equals to\n            </option>\n          </select>\n          </label>\n        <label htmlFor=\"valueInput\">\n          Value:\n          <input\n            data-testid=\"value-filter\"\n            id=\"valueInput\"\n            type=\"number\"\n            value={ value }\n            onChange={ ({ target }) => setValue(target.value) }\n          />\n        </label>\n      <button\n        data-testid=\"button-filter\"\n        type=\"button\"\n        onClick={ addFilter }\n      >\n        Filter\n      </button>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport Table from './Table';\nimport myContext from '../context/myContext';\nimport NumericFilter from './NumericFilter';\nimport { GiExplodingPlanet } from 'react-icons/gi';\n\nexport default function MainContent() {\n  const { filterByName,\n    setNameFilter } = useContext(myContext);\n  return (\n    <div className=\"main-content\">\n      <div className=\"about\">\n       <div className=\"title\">\n        <GiExplodingPlanet className=\"image\"/>\n        <h1>StarWars Planets</h1>\n       </div>\n       <h4>Search information about any planet of the StarWars saga...</h4>\n      </div>\n      <p></p>\n      <main className=\"forms-container\">\n        <div className=\"name-input\">\n          <label htmlFor=\"nameInput\">\n            Search by Name:\n            <input\n              data-testid=\"name-filter\"\n              id=\"nameInput\"\n              type=\"text\"\n              placeholder=\"Which planet are you looking for?\"\n              value={ filterByName.name }\n              onChange={ ({ target }) => setNameFilter(target.value) }\n              className=\"input-name\"\n            />\n          </label>\n        </div>\n        <NumericFilter />\n      </main>\n      <Table />\n    </div>\n  );\n}\n","import React from 'react';\nimport Provider from './context/Provider';\nimport MainContent from './components/MainContetn';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider>\n      <MainContent />\n    </Provider>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}