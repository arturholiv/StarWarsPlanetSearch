{"ast":null,"code":"import _regeneratorRuntime from\"/home/artur/projetos-para-gh-pages/StarWarsPlanetSearch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/artur/projetos-para-gh-pages/StarWarsPlanetSearch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useContext,useEffect}from'react';import myContext from'../context/myContext';import TableHeaders from'./TableHeaders';import TableRows from'./TableRows';import{fetchPlanets}from'../services/planetsAPI';export default function Table(){var _useContext=useContext(myContext),planets=_useContext.planets,setPlanets=_useContext.setPlanets,name=_useContext.filterByName.name,filterByNumericValues=_useContext.filterByNumericValues;var operator={'maior que':function maiorQue(a,b){return a>b;},'menor que':function menorQue(a,b){return a<b;},'igual a':function igualA(a,b){return a===b;}};function applyFilters(planetsToFilter){filterByNumericValues.forEach(function(filter){planetsToFilter=planetsToFilter.filter(function(planet){var planetValue=Number(planet[filter.column]);var filterValue=Number(filter.value);return operator[filter.comparison](planetValue,filterValue);});});return planetsToFilter;}useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetchPlanets();case 2:data=_context.sent;setPlanets(data.results);case 4:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[setPlanets]);function planetsToRender(){var filteredByNumbers=applyFilters(planets);return filteredByNumbers.filter(function(planet){return planet.name.toLowerCase().includes(name.toLowerCase());}).map(function(planet){return TableRows(planet);});// aqui eu chamo a funçao do componente tablerows para criar cada linha\n}return/*#__PURE__*/React.createElement(\"table\",{cellspacing:\"5\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(TableHeaders,null)),/*#__PURE__*/React.createElement(\"tbody\",null,planetsToRender()));}","map":{"version":3,"sources":["/home/artur/projetos-para-gh-pages/StarWarsPlanetSearch/src/components/Table.jsx"],"names":["React","useContext","useEffect","myContext","TableHeaders","TableRows","fetchPlanets","Table","planets","setPlanets","name","filterByName","filterByNumericValues","operator","a","b","applyFilters","planetsToFilter","forEach","filter","planet","planetValue","Number","column","filterValue","value","comparison","fetchData","data","results","planetsToRender","filteredByNumbers","toLowerCase","includes","map"],"mappings":"yVAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,KAA6C,OAA7C,CACA,MAAOC,CAAAA,SAAP,KAAsB,sBAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,OAASC,YAAT,KAA6B,wBAA7B,CAEA,cAAe,SAASC,CAAAA,KAAT,EAAiB,iBAM1BN,UAAU,CAACE,SAAD,CANgB,CAE5BK,OAF4B,aAE5BA,OAF4B,CAG5BC,UAH4B,aAG5BA,UAH4B,CAIZC,IAJY,aAI5BC,YAJ4B,CAIZD,IAJY,CAK5BE,qBAL4B,aAK5BA,qBAL4B,CAQ9B,GAAMC,CAAAA,QAAQ,CAAG,CACf,YAAa,kBAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAAGC,CAAd,EADE,CAEf,YAAa,kBAACD,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAAGC,CAAd,EAFE,CAGf,UAAW,gBAACD,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,GAAKC,CAAhB,EAHI,CAAjB,CAMA,QAASC,CAAAA,YAAT,CAAsBC,eAAtB,CAAuC,CACrCL,qBAAqB,CAACM,OAAtB,CAA8B,SAACC,MAAD,CAAY,CACxCF,eAAe,CAAGA,eAAe,CAACE,MAAhB,CAAuB,SAACC,MAAD,CAAY,CACnD,GAAMC,CAAAA,WAAW,CAAGC,MAAM,CAACF,MAAM,CAACD,MAAM,CAACI,MAAR,CAAP,CAA1B,CACA,GAAMC,CAAAA,WAAW,CAAGF,MAAM,CAACH,MAAM,CAACM,KAAR,CAA1B,CACA,MAAOZ,CAAAA,QAAQ,CAACM,MAAM,CAACO,UAAR,CAAR,CAA4BL,WAA5B,CAAyCG,WAAzC,CAAP,CACD,CAJiB,CAAlB,CAKD,CAND,EAOA,MAAOP,CAAAA,eAAP,CACD,CAEDf,SAAS,CAAC,UAAM,SACCyB,CAAAA,SADD,qIACd,kKACqBrB,CAAAA,YAAY,EADjC,QACQsB,IADR,eAEEnB,UAAU,CAACmB,IAAI,CAACC,OAAN,CAAV,CAFF,sDADc,4CAKdF,SAAS,GACV,CANQ,CAMN,CAAClB,UAAD,CANM,CAAT,CAOA,QAASqB,CAAAA,eAAT,EAA2B,CACzB,GAAMC,CAAAA,iBAAiB,CAAGf,YAAY,CAACR,OAAD,CAAtC,CACA,MAAOuB,CAAAA,iBAAiB,CACrBZ,MADI,CACG,SAACC,MAAD,QAAaA,CAAAA,MAAM,CAACV,IAAR,CAAcsB,WAAd,GAA4BC,QAA5B,CAAsCvB,IAAD,CAAOsB,WAAP,EAArC,CAAZ,EADH,EAEJE,GAFI,CAEA,SAACd,MAAD,QAAYf,CAAAA,SAAS,CAACe,MAAD,CAArB,EAFA,CAAP,CAEuC;AACxC,CAED,mBACE,6BAAO,WAAW,CAAC,GAAnB,eACE,8CACE,oBAAC,YAAD,MADF,CADF,cAKE,iCACGU,eAAe,EADlB,CALF,CADF,CAWD","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport myContext from '../context/myContext';\nimport TableHeaders from './TableHeaders';\nimport TableRows from './TableRows';\nimport { fetchPlanets } from '../services/planetsAPI';\n\nexport default function Table() {\n  const {\n    planets,\n    setPlanets,\n    filterByName: { name },\n    filterByNumericValues,\n  } = useContext(myContext);\n\n  const operator = {\n    'maior que': (a, b) => a > b,\n    'menor que': (a, b) => a < b,\n    'igual a': (a, b) => a === b,\n  };\n\n  function applyFilters(planetsToFilter) {\n    filterByNumericValues.forEach((filter) => {\n      planetsToFilter = planetsToFilter.filter((planet) => {\n        const planetValue = Number(planet[filter.column]);\n        const filterValue = Number(filter.value);\n        return operator[filter.comparison](planetValue, filterValue);\n      });\n    });\n    return planetsToFilter;\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      const data = await fetchPlanets();\n      setPlanets(data.results);\n    }\n    fetchData();\n  }, [setPlanets]);\n  function planetsToRender() {\n    const filteredByNumbers = applyFilters(planets);\n    return filteredByNumbers\n      .filter((planet) => (planet.name).toLowerCase().includes((name).toLowerCase()))\n      .map((planet) => TableRows(planet)); // aqui eu chamo a funçao do componente tablerows para criar cada linha\n  }\n\n  return (\n    <table cellspacing=\"5\">\n      <thead>\n        <TableHeaders />\n      </thead>\n\n      <tbody>\n        {planetsToRender()}\n      </tbody>\n    </table>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}