{"ast":null,"code":"var _jsxFileName = \"/home/artur/projetos/sd-015-b-project-starwars-planets-search/src/components/Table.jsx\";\nimport React, { useContext, useEffect } from 'react';\nimport myContext from '../context/myContext';\nimport TableHeaders from './TableHeaders';\nimport TableRows from './TableRows';\nimport { fetchPlanets } from '../services/planetsAPI';\nexport default function Table() {\n  const {\n    planets,\n    setPlanets,\n    filterByName: {\n      name\n    },\n    filterByNumericValues\n  } = useContext(myContext);\n  const operator = {\n    'maior que': (a, b) => a > b,\n    'menor que': (a, b) => a < b,\n    'igual a': (a, b) => a === b\n  };\n\n  function applyFilters(planetsToFilter) {\n    filterByNumericValues.forEach(filter => {\n      planetsToFilter = planetsToFilter.filter(planet => {\n        const planetValue = Number(planet[filter.column]);\n        const filterValue = Number(filter.value);\n        return operator[filter.comparison](planetValue, filterValue);\n      });\n    });\n    return planetsToFilter;\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      const data = await fetchPlanets();\n      setPlanets(data.results);\n    }\n\n    fetchData();\n  }, [setPlanets]);\n  return /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHeaders, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, planets.filter(planet => planet.name.toLowerCase().includes(name.toLowerCase())).map(planet => TableRows(planet))));\n}","map":{"version":3,"sources":["/home/artur/projetos/sd-015-b-project-starwars-planets-search/src/components/Table.jsx"],"names":["React","useContext","useEffect","myContext","TableHeaders","TableRows","fetchPlanets","Table","planets","setPlanets","filterByName","name","filterByNumericValues","operator","a","b","applyFilters","planetsToFilter","forEach","filter","planet","planetValue","Number","column","filterValue","value","comparison","fetchData","data","results","toLowerCase","includes","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,YAAY,EAAE;AAAEC,MAAAA;AAAF,KAHV;AAIJC,IAAAA;AAJI,MAKFX,UAAU,CAACE,SAAD,CALd;AAOA,QAAMU,QAAQ,GAAG;AACf,iBAAa,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CADZ;AAEf,iBAAa,CAACD,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAFZ;AAGf,eAAW,CAACD,CAAD,EAAIC,CAAJ,KAAUD,CAAC,KAAKC;AAHZ,GAAjB;;AAMA,WAASC,YAAT,CAAsBC,eAAtB,EAAuC;AACrCL,IAAAA,qBAAqB,CAACM,OAAtB,CAA+BC,MAAD,IAAY;AACxCF,MAAAA,eAAe,GAAGA,eAAe,CAACE,MAAhB,CAAwBC,MAAD,IAAY;AACnD,cAAMC,WAAW,GAAGC,MAAM,CAACF,MAAM,CAACD,MAAM,CAACI,MAAR,CAAP,CAA1B;AACA,cAAMC,WAAW,GAAGF,MAAM,CAACH,MAAM,CAACM,KAAR,CAA1B;AACA,eAAOZ,QAAQ,CAACM,MAAM,CAACO,UAAR,CAAR,CAA4BL,WAA5B,EAAyCG,WAAzC,CAAP;AACD,OAJiB,CAAlB;AAKD,KAND;AAOA,WAAOP,eAAP;AACD;;AAEDf,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeyB,SAAf,GAA2B;AACzB,YAAMC,IAAI,GAAG,MAAMtB,YAAY,EAA/B;AACAG,MAAAA,UAAU,CAACmB,IAAI,CAACC,OAAN,CAAV;AACD;;AACDF,IAAAA,SAAS;AACV,GANQ,EAMN,CAAClB,UAAD,CANM,CAAT;AASA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,CACLW,MADF,CACUC,MAAD,IAAaA,MAAM,CAACT,IAAR,CAAcmB,WAAd,GAA4BC,QAA5B,CAAsCpB,IAAD,CAAOmB,WAAP,EAArC,CADrB,EAEEE,GAFF,CAEOZ,MAAD,IAAYf,SAAS,CAACe,MAAD,CAF3B,CADH,CALF,CADF;AAaD","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport myContext from '../context/myContext';\nimport TableHeaders from './TableHeaders';\nimport TableRows from './TableRows';\nimport { fetchPlanets } from '../services/planetsAPI';\n\nexport default function Table() {\n  const {\n    planets,\n    setPlanets,\n    filterByName: { name },\n    filterByNumericValues,\n  } = useContext(myContext);\n\n  const operator = {\n    'maior que': (a, b) => a > b,\n    'menor que': (a, b) => a < b,\n    'igual a': (a, b) => a === b,\n  };\n\n  function applyFilters(planetsToFilter) {\n    filterByNumericValues.forEach((filter) => {\n      planetsToFilter = planetsToFilter.filter((planet) => {\n        const planetValue = Number(planet[filter.column]);\n        const filterValue = Number(filter.value);\n        return operator[filter.comparison](planetValue, filterValue);\n      });\n    });\n    return planetsToFilter;\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      const data = await fetchPlanets();\n      setPlanets(data.results);\n    }\n    fetchData();\n  }, [setPlanets]);\n  \n\n  return (\n    <table>\n      <thead>\n        <TableHeaders />\n      </thead>\n\n      <tbody>\n        {planets\n          .filter((planet) => (planet.name).toLowerCase().includes((name).toLowerCase()))\n          .map((planet) => TableRows(planet))}\n      </tbody>\n    </table>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}