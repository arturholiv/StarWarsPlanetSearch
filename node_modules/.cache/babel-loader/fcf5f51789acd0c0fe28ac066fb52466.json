{"ast":null,"code":"import _slicedToArray from\"/home/artur/projetos-para-gh-pages/StarWarsPlanetSearch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import myContext from'./myContext';export default function Provider(_ref){var children=_ref.children;var INITIAL_OPTIONS=['population','orbital_period','diameter','rotation_period','surface_water'];var _useState=useState([]),_useState2=_slicedToArray(_useState,2),planets=_useState2[0],setPlanets=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),nameFilter=_useState4[0],setNameFilter=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),filterByNumericValues=_useState6[0],setFilterByNumericValues=_useState6[1];var _useState7=useState(INITIAL_OPTIONS),_useState8=_slicedToArray(_useState7,2),options=_useState8[0],setOptions=_useState8[1];var state={planets:planets,setPlanets:setPlanets,filterByName:{name:nameFilter},setNameFilter:setNameFilter,filterByNumericValues:filterByNumericValues,setFilterByNumericValues:setFilterByNumericValues,options:options,setOptions:setOptions};return/*#__PURE__*/React.createElement(myContext.Provider,{value:state},children);}","map":{"version":3,"sources":["/home/artur/projetos-para-gh-pages/StarWarsPlanetSearch/src/context/Provider.js"],"names":["React","useState","myContext","Provider","children","INITIAL_OPTIONS","planets","setPlanets","nameFilter","setNameFilter","filterByNumericValues","setFilterByNumericValues","options","setOptions","state","filterByName","name"],"mappings":"8KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CAEA,cAAe,SAASC,CAAAA,QAAT,MAAgC,IAAZC,CAAAA,QAAY,MAAZA,QAAY,CAC7C,GAAMC,CAAAA,eAAe,CAAG,CAAC,YAAD,CAAe,gBAAf,CACtB,UADsB,CACV,iBADU,CACS,eADT,CAAxB,CAD6C,cAIfJ,QAAQ,CAAC,EAAD,CAJO,wCAItCK,OAJsC,eAI7BC,UAJ6B,8BAKTN,QAAQ,CAAC,EAAD,CALC,yCAKtCO,UALsC,eAK1BC,aAL0B,8BAMaR,QAAQ,CAAC,EAAD,CANrB,yCAMtCS,qBANsC,eAMfC,wBANe,8BAOfV,QAAQ,CAACI,eAAD,CAPO,yCAOtCO,OAPsC,eAO7BC,UAP6B,eAS7C,GAAMC,CAAAA,KAAK,CAAG,CACZR,OAAO,CAAPA,OADY,CAEZC,UAAU,CAAVA,UAFY,CAGZQ,YAAY,CAAE,CACZC,IAAI,CAAER,UADM,CAHF,CAMZC,aAAa,CAAbA,aANY,CAOZC,qBAAqB,CAArBA,qBAPY,CAQZC,wBAAwB,CAAxBA,wBARY,CASZC,OAAO,CAAPA,OATY,CAUZC,UAAU,CAAVA,UAVY,CAAd,CAaA,mBACE,oBAAC,SAAD,CAAW,QAAX,EAAoB,KAAK,CAAGC,KAA5B,EACGV,QADH,CADF,CAKD","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport myContext from './myContext';\n\nexport default function Provider({ children }) {\n  const INITIAL_OPTIONS = ['population', 'orbital_period',\n    'diameter', 'rotation_period', 'surface_water'];\n\n  const [planets, setPlanets] = useState([]);\n  const [nameFilter, setNameFilter] = useState('');\n  const [filterByNumericValues, setFilterByNumericValues] = useState([]);\n  const [options, setOptions] = useState(INITIAL_OPTIONS);\n\n  const state = {\n    planets,\n    setPlanets,\n    filterByName: {\n      name: nameFilter,\n    },\n    setNameFilter,\n    filterByNumericValues,\n    setFilterByNumericValues,\n    options,\n    setOptions,\n  };\n\n  return (\n    <myContext.Provider value={ state }>\n      {children}\n    </myContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}