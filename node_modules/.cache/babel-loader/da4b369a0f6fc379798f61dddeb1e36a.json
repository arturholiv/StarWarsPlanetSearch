{"ast":null,"code":"var _jsxFileName = \"/home/artur/projetos-para-gh-pages/StarWarsPlanetSearch/src/components/NumericFilter.jsx\";\nimport React, { useContext, useState } from 'react';\nimport myContext from '../context/myContext';\nexport default function NumericFilter() {\n  const {\n    filterByNumericValues,\n    setFilterByNumericValues,\n    options,\n    setOptions\n  } = useContext(myContext);\n  const [column, setColumn] = useState('population');\n  const [comparison, setComparison] = useState('maior que');\n  const [value, setValue] = useState(0);\n\n  function removeFilter() {\n    const newOptionsOfColumnToFilter = options.filter(option => option !== column);\n    const indexToSetColumn = options.indexOf(column) === 0 ? 1 : 0;\n    setOptions(newOptionsOfColumnToFilter);\n    setColumn(options[indexToSetColumn]);\n  }\n\n  function addFilter() {\n    const actualFilter = {\n      column,\n      comparison,\n      value\n    };\n    const newFiltersArray = [...filterByNumericValues, actualFilter];\n    setFilterByNumericValues(newFiltersArray);\n    removeFilter();\n  }\n\n  function optionGenerator(option) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: option,\n      key: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, option);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filters-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"columnInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Filter by column:\", /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"column-filter\",\n    id: \"columnInput\",\n    onChange: ({\n      target\n    }) => setColumn(target.value),\n    className: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, options.map(option => optionGenerator(option)))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"comparisonInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Bigger or smaller?\", /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"comparison-filter\",\n    id: \"comparisonInput\",\n    onChange: ({\n      target\n    }) => setComparison(target.value),\n    className: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"maior que\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"bigger than\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"menor que\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"smaller than\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"igual a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"equals to\"))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"valueInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Value:\", /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"value-filter\",\n    id: \"valueInput\",\n    type: \"number\",\n    value: value,\n    onChange: ({\n      target\n    }) => setValue(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"button-filter\",\n    type: \"button\",\n    onClick: addFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, \"Filter\"));\n}","map":{"version":3,"sources":["/home/artur/projetos-para-gh-pages/StarWarsPlanetSearch/src/components/NumericFilter.jsx"],"names":["React","useContext","useState","myContext","NumericFilter","filterByNumericValues","setFilterByNumericValues","options","setOptions","column","setColumn","comparison","setComparison","value","setValue","removeFilter","newOptionsOfColumnToFilter","filter","option","indexToSetColumn","indexOf","addFilter","actualFilter","newFiltersArray","optionGenerator","target","map"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport myContext from '../context/myContext';\n\nexport default function NumericFilter() {\n  const {\n    filterByNumericValues,\n    setFilterByNumericValues,\n    options,\n    setOptions,\n  } = useContext(myContext);\n\n  const [column, setColumn] = useState('population');\n  const [comparison, setComparison] = useState('maior que');\n  const [value, setValue] = useState(0);\n\n  function removeFilter() {\n    const newOptionsOfColumnToFilter = options\n      .filter((option) => option !== column);\n    const indexToSetColumn = options.indexOf(column) === 0 ? 1 : 0;\n    setOptions(newOptionsOfColumnToFilter);\n    setColumn(options[indexToSetColumn]);\n  }\n\n  function addFilter() {\n    const actualFilter = {\n      column,\n      comparison,\n      value,\n    };\n\n    const newFiltersArray = [...filterByNumericValues, actualFilter];\n\n    setFilterByNumericValues(newFiltersArray);\n    removeFilter();\n  }\n\n  function optionGenerator(option) {\n    return (\n      <option\n        value={ option }\n        key={ option }\n      >\n        {option}\n      </option>\n    );\n  }\n\n  return (\n    <div className=\"filters-container\">\n      <label htmlFor=\"columnInput\">\n        Filter by column:\n        <select\n          data-testid=\"column-filter\"\n          id=\"columnInput\"\n          onChange={ ({ target }) => setColumn(target.value) }\n          className=\"select\"\n        >\n          {options.map((option) => optionGenerator(option))}\n        </select>\n        </label>\n        <label htmlFor=\"comparisonInput\">\n\n          Bigger or smaller?\n          <select\n            data-testid=\"comparison-filter\"\n            id=\"comparisonInput\"\n            onChange={ ({ target }) => setComparison(target.value) }\n            className=\"select\"\n          >\n            <option\n              value=\"maior que\"\n            >\n              bigger than\n            </option>\n            <option\n              value=\"menor que\"\n            >\n              smaller than\n            </option>\n            <option\n              value=\"igual a\"\n            >\n              equals to\n            </option>\n          </select>\n          </label>\n        <label htmlFor=\"valueInput\">\n          Value:\n          <input\n            data-testid=\"value-filter\"\n            id=\"valueInput\"\n            type=\"number\"\n            value={ value }\n            onChange={ ({ target }) => setValue(target.value) }\n          />\n        </label>\n      <button\n        data-testid=\"button-filter\"\n        type=\"button\"\n        onClick={ addFilter }\n      >\n        Filter\n      </button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}