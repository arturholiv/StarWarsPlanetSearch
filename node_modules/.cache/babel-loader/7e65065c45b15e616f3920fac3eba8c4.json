{"ast":null,"code":"import _toConsumableArray from\"/home/artur/projetos-para-gh-pages/StarWarsPlanetSearch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/artur/projetos-para-gh-pages/StarWarsPlanetSearch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from'react';import myContext from'../context/myContext';export default function NumericFilter(){var _useContext=useContext(myContext),filterByNumericValues=_useContext.filterByNumericValues,setFilterByNumericValues=_useContext.setFilterByNumericValues,options=_useContext.options,setOptions=_useContext.setOptions;var _useState=useState('population'),_useState2=_slicedToArray(_useState,2),column=_useState2[0],setColumn=_useState2[1];var _useState3=useState('maior que'),_useState4=_slicedToArray(_useState3,2),comparison=_useState4[0],setComparison=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),value=_useState6[0],setValue=_useState6[1];function removeFilter(){var newOptionsOfColumnToFilter=options.filter(function(option){return option!==column;});var indexToSetColumn=options.indexOf(column)===0?1:0;setOptions(newOptionsOfColumnToFilter);setColumn(options[indexToSetColumn]);}function addFilter(){var actualFilter={column:column,comparison:comparison,value:value};var newFiltersArray=[].concat(_toConsumableArray(filterByNumericValues),[actualFilter]);setFilterByNumericValues(newFiltersArray);removeFilter();}function optionGenerator(option){return/*#__PURE__*/React.createElement(\"option\",{value:option,key:option,className:\"option-dropdown\"},option);}return/*#__PURE__*/React.createElement(\"div\",{className:\"filters-container\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"columnInput\"},\"Filter by column:\",/*#__PURE__*/React.createElement(\"select\",{\"data-testid\":\"column-filter\",id:\"columnInput\",onChange:function onChange(_ref){var target=_ref.target;return setColumn(target.value);},className:\"select\"},options.map(function(option){return optionGenerator(option);}))),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"comparisonInput\"},\"Bigger or smaller?\",/*#__PURE__*/React.createElement(\"select\",{\"data-testid\":\"comparison-filter\",id:\"comparisonInput\",onChange:function onChange(_ref2){var target=_ref2.target;return setComparison(target.value);},className:\"select\"},/*#__PURE__*/React.createElement(\"option\",{value:\"maior que\",className:\"option-dropdown\"},\"bigger than\"),/*#__PURE__*/React.createElement(\"option\",{value:\"menor que\",className:\"option-dropdown\"},\"smaller than\"),/*#__PURE__*/React.createElement(\"option\",{value:\"igual a\",className:\"option-dropdown\"},\"equals to\"))),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"valueInput\"},\"Value:\",/*#__PURE__*/React.createElement(\"input\",{\"data-testid\":\"value-filter\",id:\"valueInput\",type:\"number\",value:value,onChange:function onChange(_ref3){var target=_ref3.target;return setValue(target.value);}})),/*#__PURE__*/React.createElement(\"button\",{\"data-testid\":\"button-filter\",type:\"button\",onClick:addFilter},\"Filter\"));}","map":{"version":3,"sources":["/home/artur/projetos-para-gh-pages/StarWarsPlanetSearch/src/components/NumericFilter.jsx"],"names":["React","useContext","useState","myContext","NumericFilter","filterByNumericValues","setFilterByNumericValues","options","setOptions","column","setColumn","comparison","setComparison","value","setValue","removeFilter","newOptionsOfColumnToFilter","filter","option","indexToSetColumn","indexOf","addFilter","actualFilter","newFiltersArray","optionGenerator","target","map"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport myContext from '../context/myContext';\n\nexport default function NumericFilter() {\n  const {\n    filterByNumericValues,\n    setFilterByNumericValues,\n    options,\n    setOptions,\n  } = useContext(myContext);\n\n  const [column, setColumn] = useState('population');\n  const [comparison, setComparison] = useState('maior que');\n  const [value, setValue] = useState(0);\n\n  function removeFilter() {\n    const newOptionsOfColumnToFilter = options\n      .filter((option) => option !== column);\n    const indexToSetColumn = options.indexOf(column) === 0 ? 1 : 0;\n    setOptions(newOptionsOfColumnToFilter);\n    setColumn(options[indexToSetColumn]);\n  }\n\n  function addFilter() {\n    const actualFilter = {\n      column,\n      comparison,\n      value,\n    };\n\n    const newFiltersArray = [...filterByNumericValues, actualFilter];\n\n    setFilterByNumericValues(newFiltersArray);\n    removeFilter();\n  }\n\n  function optionGenerator(option) {\n    return (\n      <option\n        value={ option }\n        key={ option }\n        className=\"option-dropdown\"\n      >\n        {option}\n      </option>\n    );\n  }\n\n  return (\n    <div className=\"filters-container\">\n      <label htmlFor=\"columnInput\">\n        Filter by column:\n        <select\n          data-testid=\"column-filter\"\n          id=\"columnInput\"\n          onChange={ ({ target }) => setColumn(target.value) }\n          className=\"select\"\n        >\n          {options.map((option) => optionGenerator(option))}\n        </select>\n        </label>\n        <label htmlFor=\"comparisonInput\">\n\n          Bigger or smaller?\n          <select\n            data-testid=\"comparison-filter\"\n            id=\"comparisonInput\"\n            onChange={ ({ target }) => setComparison(target.value) }\n            className=\"select\"\n          >\n            <option\n              value=\"maior que\"\n              className=\"option-dropdown\"\n            >\n              bigger than\n            </option>\n            <option\n              value=\"menor que\"\n              className=\"option-dropdown\"\n            >\n              smaller than\n            </option>\n            <option\n              value=\"igual a\"\n              className=\"option-dropdown\"\n            >\n              equals to\n            </option>\n          </select>\n          </label>\n        <label htmlFor=\"valueInput\">\n          Value:\n          <input\n            data-testid=\"value-filter\"\n            id=\"valueInput\"\n            type=\"number\"\n            value={ value }\n            onChange={ ({ target }) => setValue(target.value) }\n          />\n        </label>\n      <button\n        data-testid=\"button-filter\"\n        type=\"button\"\n        onClick={ addFilter }\n      >\n        Filter\n      </button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}