{"ast":null,"code":"var _jsxFileName = \"/home/artur/projetos/sd-015-b-project-starwars-planets-search/src/context/Provider.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport context from './myContext';\nexport default function Provider({\n  children\n}) {\n  const [planets, setPlanets] = useState([]);\n  const [nameFilter, setNameFilter] = useState('');\n  const state = {\n    planets,\n    setPlanets,\n    filterByName: {\n      name: nameFilter\n    },\n    setNameFilter\n  };\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, children);\n}\nProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};","map":{"version":3,"sources":["/home/artur/projetos/sd-015-b-project-starwars-planets-search/src/context/Provider.js"],"names":["React","useState","PropTypes","context","Provider","children","planets","setPlanets","nameFilter","setNameFilter","state","filterByName","name","propTypes","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,aAApB;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAgC;AAC7C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AAGA,QAAMS,KAAK,GAAG;AACZJ,IAAAA,OADY;AAEZC,IAAAA,UAFY;AAGZI,IAAAA,YAAY,EAAE;AACZC,MAAAA,IAAI,EAAEJ;AADM,KAHF;AAMZC,IAAAA;AANY,GAAd;AASA,sBACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAGC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,QADH,CADF;AAKD;AAEDD,QAAQ,CAACS,SAAT,GAAqB;AACnBR,EAAAA,QAAQ,EAAEH,SAAS,CAACY,IAAV,CAAeC;AADN,CAArB","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport context from './myContext';\n\nexport default function Provider({ children }) {\n  const [planets, setPlanets] = useState([]);\n  const [nameFilter, setNameFilter] = useState('');\n  \n\n  const state = {\n    planets,\n    setPlanets,\n    filterByName: {\n      name: nameFilter,\n    },\n    setNameFilter,\n  };\n\n  return (\n    <context.Provider value={ state }>\n      {children}\n    </context.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}